name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Client (Frontend) CI
  client-ci:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
        
    - name: Install client dependencies
      run: |
        cd client
        npm ci
        
    - name: Run client linting
      run: |
        cd client
        npm run lint
        
    - name: Run client type checking
      run: |
        cd client
        npm run type-check
        
    - name: Build client
      run: |
        cd client
        npm run build
        
  # Server (Backend) CI
  server-ci:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: task_manager_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
        
    - name: Install server dependencies
      run: |
        cd server
        npm ci
        
    - name: Run server linting
      run: |
        cd server
        npm run lint
        
    - name: Run database migrations
      run: |
        cd server
        NODE_ENV=test DB_HOST=localhost DB_PORT=5432 DB_NAME=task_manager_test DB_USER=postgres DB_PASSWORD=postgres npm run db:migrate
      env:
        NODE_ENV: test
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: task_manager_test
        DB_USER: postgres
        DB_PASSWORD: postgres
        
  # Docker build test
  docker-build:
    runs-on: ubuntu-latest
    needs: [client-ci, server-ci]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build client Docker image
      run: |
        cd client
        docker build -t task-manager-client:test .
        
    - name: Build server Docker image
      run: |
        cd server
        docker build -f Dockerfile.server -t task-manager-server:test .
        
    - name: Build full stack with docker-compose
      run: |
        docker-compose -f docker-compose.yml build 